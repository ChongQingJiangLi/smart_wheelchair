#! /usr/bin/env python

PACKAGE='octoflex'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#       Name                    Type      Reconfiguration level             Description          Default    Min   Max                                
gen.add("checkFullVolume",	bool_t,   SensorLevels.RECONFIGURE_STOP,    "Check the entire volume prism for collisions.", False)                                     
gen.add("forwardTime",    	double_t, SensorLevels.RECONFIGURE_STOP,    "The time to forward simulate the command before checking collision.",   0.2,  0.01, 2.0)
gen.add("numberOfSteps",	int_t,	  SensorLevels.RECONFIGURE_STOP,    "The number of checks to make with timesteps of forwardTime/numberOfSteps", 10, 1, 1000)
gen.add("length",    		double_t, SensorLevels.RECONFIGURE_STOP,    "Vehicle length in meters.",     	1.0,    0.01, 6.0)
gen.add("width",    		double_t, SensorLevels.RECONFIGURE_STOP,    "Vehicle width in meters.",     	1.0,    0.01, 6.0)
gen.add("height",    		double_t, SensorLevels.RECONFIGURE_STOP,    "Vehicle height in meters.",     	1.0,    0.01, 6.0)
gen.add("originOffsetX",    	double_t, SensorLevels.RECONFIGURE_STOP,    "Displacement of origin along length in meters.",     	0.0,    -3.0, 3.0)
gen.add("originOffsetY",    	double_t, SensorLevels.RECONFIGURE_STOP,    "Displacement of origin along width in meters.",     	0.0,    -3.0, 3.0)
gen.add("originOffsetZ",    	double_t, SensorLevels.RECONFIGURE_STOP,    "Displacement of origin along height in meters.",     	0.0,    -3.0, 3.0)
gen.add("resolution",		double_t, SensorLevels.RECONFIGURE_STOP,    "Resolution of OctoMap to check for collisions.", 0.025, 0.01, 1.0)
gen.add("rate",			double_t, SensorLevels.RECONFIGURE_STOP,    "Frequency to perform collision checks in Hz.", 20, 0.1, 100)
gen.add("visualizationPause",	double_t, SensorLevels.RECONFIGURE_STOP,    "Time to wait between each step for visualization purposes.  Do not run with production.", 0.0, 0.0, 1.0)

exit(gen.generate(PACKAGE, "octoflex.cpp", "OctoFlex"))