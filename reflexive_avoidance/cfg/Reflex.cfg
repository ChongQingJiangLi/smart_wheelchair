#! /usr/bin/env python

PACKAGE='reflexive_avoidance'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#       Name                    Type      Reconfiguration level             Description          Default    Min   Max
gen.add("use_kinect",		bool_t,   SensorLevels.RECONFIGURE_STOP,    "Use the Kinect data to halt commands.", True)                                     
gen.add("num_points",           int_t,    SensorLevels.RECONFIGURE_STOP,    "The number of points needed in the point cloud to halt the vehicle.",                      100,        1, 1000)                                                                                 
gen.add("use_sonars",		bool_t,   SensorLevels.RECONFIGURE_STOP,    "Use the sonars to halt commands.", True)                                     
gen.add("front_sonar_thresh",   double_t, SensorLevels.RECONFIGURE_STOP,    "The distance (m) the front sonars must go below to cease forward movement.",               0.17,    0.01, 5.0)
gen.add("side_sonar_thresh",    double_t, SensorLevels.RECONFIGURE_STOP,    "The distance (m) the side sonars must go below to cease rotation.",                	0.17,    0.01, 5.0)
gen.add("use_laser",		bool_t,   SensorLevels.RECONFIGURE_STOP,    "Use the laser to halt commands.", True)                                     
gen.add("front_laser_thresh",   double_t, SensorLevels.RECONFIGURE_STOP,    "The distance (m) the distance of the forward laser to halt.",                		 0.4,    0.01, 6.0)
gen.add("front_laser_angle",    double_t, SensorLevels.RECONFIGURE_STOP,    "The angle width (rad) to check of the laser forwards.",                			 1.0,    0.01, 6.28)
gen.add("side_laser_thresh",    double_t, SensorLevels.RECONFIGURE_STOP,    "The distance (m) the side laser must go below to cease rotation.",                		 0.4,    0.01, 6.0)
gen.add("side_laser_angle",     double_t, SensorLevels.RECONFIGURE_STOP,    "The angle width (rad) to check of the laser on either side.",                		 1.0,    0.01, 6.28)

exit(gen.generate(PACKAGE, "reflexive_obstacle_avoidance.cpp", "Reflex"))